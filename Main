import java.util.*;
    
public class Main{
      ArrayList <ArrayList<Cell>>  cells = new ArrayList <ArrayList<Cell>>();

      public void main (int[] nums){
            
            ArrayList <ArrayList<Cell>>  cells = new ArrayList <ArrayList<Cell>>();
            
            //The first for loop corresponds to the Rows.
            //The Second for loop corresponds to the Columns.
            int totalCells = 0;
            int square = 0;
            for (int i = 0; i < 9; i++){
                cells.add(new ArrayList<Cell>());
                
                for( int k = 0; k < 9; k++){
                   square = (((i / 3) * 3) + (k / 3));
                   cells.get(i).add(new Cell(i, k, square, nums[totalCells]));
                   totalCells ++;
                }
            }
            
            bruteForceAlgorithm(cells);
            
            for (int i = 0; i < 9; i ++){
                for (int l = 0; l < 9; l++){
                    System.out.println (cells.get(i).get(l).value);
                }
            }
      }
        
      public void bruteForceAlgorithm (ArrayList<ArrayList<Cell>> cells) {
          ArrayList <Cell> guesses = new ArrayList <Cell>();
          
            int stopper = 0;
            int stopper2 = 0;
            int rowCoordinate = 0;
            int columnCoordinate = 0;
            
           for (int i = 0; i < 9; i++){
               for (int k = 0; k < 9; k ++){
                   if (cells.get(i).get(k).value == 0){
                   if (cells.get(i).get(k).nextPossibleGuess(cells)){
                       guesses.add(cells.get(i).get(k));
                   }
                   else {
                       while (guesses.size() > 0){
                           if (!guesses.get(guesses.size() - 1).nextPossibleGuess(cells)){
                               guesses.remove(guesses.size() - 1);
                           }
                           else {
                                break;
                           }
                       }
                       k = guesses.get (guesses.size() - 1).column;
                       i = guesses.get (guesses.size() - 1).row;
                      
                    }
                 }
               }
            }
      }
}

